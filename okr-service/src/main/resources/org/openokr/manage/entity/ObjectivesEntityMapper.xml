<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.openokr.manage.entity.ObjectivesEntityMapper">
  <resultMap id="BaseResultMap" type="org.openokr.manage.entity.ObjectivesEntity">
    <id column="id" jdbcType="VARCHAR" property="id" />
    <result column="time_session_id" jdbcType="VARCHAR" property="timeSessionId" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="description" jdbcType="VARCHAR" property="description" />
    <result column="owner_id" jdbcType="VARCHAR" property="ownerId" />
    <result column="parent_id" jdbcType="VARCHAR" property="parentId" />
    <result column="confidence_level" jdbcType="VARCHAR" property="confidenceLevel" />
    <result column="visibility" jdbcType="CHAR" property="visibility" />
    <result column="type" jdbcType="CHAR" property="type" />
    <result column="status" jdbcType="CHAR" property="status" />
    <result column="del_flag" jdbcType="CHAR" property="delFlag" />
    <result column="progress" jdbcType="NUMERIC" property="progress" />
    <result column="score" jdbcType="VARCHAR" property="score" />
    <result column="assessment" jdbcType="VARCHAR" property="assessment" />
    <result column="create_ts" jdbcType="TIMESTAMP" property="createTs" />
    <result column="create_user_id" jdbcType="VARCHAR" property="createUserId" />
    <result column="update_ts" jdbcType="TIMESTAMP" property="updateTs" />
    <result column="update_user_id" jdbcType="VARCHAR" property="updateUserId" />
    <result column="team_id" jdbcType="VARCHAR" property="teamId" />
    <result column="sort" jdbcType="INTEGER" property="sort" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, time_session_id, name, description, owner_id, parent_id, confidence_level, visibility, 
    type, status, del_flag, progress, score, assessment, create_ts, create_user_id, update_ts, 
    update_user_id, team_id, sort
  </sql>
  <select id="selectByCondition" parameterType="org.openokr.manage.entity.ObjectivesEntityCondition" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from t_okr_manage_objectives
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <include refid="PostgreSqlPaginationSuffix" />
  </select>
  <delete id="deleteByCondition" parameterType="org.openokr.manage.entity.ObjectivesEntityCondition">
    delete from t_okr_manage_objectives
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <select id="countByCondition" parameterType="org.openokr.manage.entity.ObjectivesEntityCondition" resultType="java.lang.Long">
    select count(*) from t_okr_manage_objectives
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByCondition" parameterType="map">
    update t_okr_manage_objectives
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=VARCHAR},
      </if>
      <if test="record.timeSessionId != null">
        time_session_id = #{record.timeSessionId,jdbcType=VARCHAR},
      </if>
      <if test="record.name != null">
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.description != null">
        description = #{record.description,jdbcType=VARCHAR},
      </if>
      <if test="record.ownerId != null">
        owner_id = #{record.ownerId,jdbcType=VARCHAR},
      </if>
      <if test="record.parentId != null">
        parent_id = #{record.parentId,jdbcType=VARCHAR},
      </if>
      <if test="record.confidenceLevel != null">
        confidence_level = #{record.confidenceLevel,jdbcType=VARCHAR},
      </if>
      <if test="record.visibility != null">
        visibility = #{record.visibility,jdbcType=CHAR},
      </if>
      <if test="record.type != null">
        type = #{record.type,jdbcType=CHAR},
      </if>
      <if test="record.status != null">
        status = #{record.status,jdbcType=CHAR},
      </if>
      <if test="record.delFlag != null">
        del_flag = #{record.delFlag,jdbcType=CHAR},
      </if>
      <if test="record.progress != null">
        progress = #{record.progress,jdbcType=NUMERIC},
      </if>
      <if test="record.score != null">
        score = #{record.score,jdbcType=VARCHAR},
      </if>
      <if test="record.assessment != null">
        assessment = #{record.assessment,jdbcType=VARCHAR},
      </if>
      <if test="record.createTs != null">
        create_ts = #{record.createTs,jdbcType=TIMESTAMP},
      </if>
      <if test="record.createUserId != null">
        create_user_id = #{record.createUserId,jdbcType=VARCHAR},
      </if>
      <if test="record.updateTs != null">
        update_ts = #{record.updateTs,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateUserId != null">
        update_user_id = #{record.updateUserId,jdbcType=VARCHAR},
      </if>
      <if test="record.teamId != null">
        team_id = #{record.teamId,jdbcType=VARCHAR},
      </if>
      <if test="record.sort != null">
        sort = #{record.sort,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <sql id="PostgreSqlPaginationSuffix">
    <if test="page != null">
      <![CDATA[ limit #{page.pageSize} offset #{page.recordStartPrev} ]]>
    </if>
  </sql>
  <insert id="insertList" parameterType="java.util.List">
     insert into t_okr_manage_objectives ( id,time_session_id,name,description,owner_id,parent_id,confidence_level,visibility,type,status,del_flag,progress,score,assessment,create_ts,create_user_id,update_ts,update_user_id,team_id,sort ) values
    <foreach collection="list" index="index" item="item" separator=",">
       ( #{item.id,jdbcType=VARCHAR},#{item.timeSessionId,jdbcType=VARCHAR},#{item.name,jdbcType=VARCHAR},#{item.description,jdbcType=VARCHAR},#{item.ownerId,jdbcType=VARCHAR},#{item.parentId,jdbcType=VARCHAR},#{item.confidenceLevel,jdbcType=VARCHAR},#{item.visibility,jdbcType=CHAR},#{item.type,jdbcType=CHAR},#{item.status,jdbcType=CHAR},#{item.delFlag,jdbcType=CHAR},#{item.progress,jdbcType=NUMERIC},#{item.score,jdbcType=VARCHAR},#{item.assessment,jdbcType=VARCHAR},#{item.createTs,jdbcType=TIMESTAMP},#{item.createUserId,jdbcType=VARCHAR},#{item.updateTs,jdbcType=TIMESTAMP},#{item.updateUserId,jdbcType=VARCHAR},#{item.teamId,jdbcType=VARCHAR},#{item.sort,jdbcType=INTEGER} )
    </foreach>
  </insert>
</mapper>